security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: login
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            json_login:
                check_path: app_login
                username_path: login
                password_path: password
            logout:
                path: app_logout
            access_token:
                token_handler: App\Security\ApiTokenHandler
                failure_handler: App\Security\ApiTokenFailureHandler

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: '^/api/games/\d+$', roles: PUBLIC_ACCESS, requires_channel: https }
        - { path: '^/api/reviews/\d+$', roles: PUBLIC_ACCESS, requires_channel: https }
        - { path: '^/api/reviews', roles: PUBLIC_ACCESS, requires_channel: https }
        - { path: '^/api/games$', roles: PUBLIC_ACCESS, requires_channel: https }
        - { path: '^/api/login', roles: PUBLIC_ACCESS, requires_channel: https }
        - { path: '^/api/register', roles: PUBLIC_ACCESS, requires_channel: https }
        - { path: '^/api/doc', roles: PUBLIC_ACCESS, requires_channel: https }
        - { path: '^/api', roles: ROLE_USER, requires_channel: https }
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }

when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4
                time_cost: 3
                memory_cost: 10
